{"version":3,"file":"static/js/364.50e7c971.chunk.js","mappings":"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","sources":["assets/img/svg/icon_arrow_left.jsx","assets/img/svg/icon_arrow_right.jsx","components/room-item/style.js","base-ui/indicator/style.js","base-ui/indicator/index.jsx","components/room-item/index.jsx","services/modules/entire.js","store/modules/entire/createActions.js","views/entire/c-cpns/entire-filter/style.js","views/entire/c-cpns/entire-filter/index.jsx","views/entire/c-cpns/entire-pagination/style.js","views/entire/c-cpns/entire-pagination/index.jsx","views/entire/c-cpns/entire-rooms/style.js","views/entire/c-cpns/entire-rooms/index.jsx","views/entire/style.js","views/entire/index.jsx"],"sourcesContent":["import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowLeft = memo((props) => {\n  const {width = 12 ,height = 12 } = props\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"previous\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m13.7 16.29a1 1 0 1 1 -1.42 1.41l-8-8a1 1 0 0 1 0-1.41l8-8a1 1 0 1 1 1.42 1.41l-7.29 7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowLeft","import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowRight = memo((props) => {\n  const {width = 12,height = 12} = props\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"next\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m4.29 1.71a1 1 0 1 1 1.42-1.41l8 8a1 1 0 0 1 0 1.41l-8 8a1 1 0 1 1 -1.42-1.41l7.29-7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowRight","import styled from \"styled-components\";\n\nexport const ItemWrapper = styled.div`\n  flex-shrink: 0;\n  box-sizing: border-box;\n  width: ${(props) => props.itemWidth};\n  padding: 8px; //section-rooms 搭配设置负margin-8px\n\n  .inner {\n    width: 100%;\n  }\n  .slider {\n    position: relative;\n    cursor: pointer;\n\n    &:hover {\n      .control {\n        display: flex;\n      }\n    }\n    .control {\n      position: absolute;\n      z-index: 1;\n      left: 0;\n      right: 0;\n      top: 0;\n      display: none;\n      justify-content: space-between;\n      bottom: 0;\n      color: #fff;\n\n      .btn {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 83px;\n        height: 100%;\n        background: linear-gradient(\n          to left,\n          transparent 0%,\n          rgba(0, 0, 0, 0.25) 100%\n        );\n        &.right {\n          background: linear-gradient(\n            to right,\n            transparent 0%,\n            rgba(0, 0, 0, 0.25) 100%\n          );\n        }\n      }\n    }\n\n    .indicator {\n      position: absolute;\n      z-index: 9;\n      bottom: 10px;\n      width: 30%;\n      left: 0;\n      right: 0;\n      margin: 0 auto;\n\n      .item {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 20%;\n\n        .dot {\n          width: 6px;\n          height: 6px;\n          background-color: #fff;\n          border-radius: 50%;\n\n          &.active {\n            width: 8px;\n            height: 8px;\n          }\n        }\n      }\n    }\n  }\n\n  .cover {\n    position: relative;\n    box-sizing: border-box;\n    padding: 66.66% 8px 0; // 固定图片的高是宽的 “三分之二”\n    border-radius: 3px;\n    overflow: hidden;\n\n    img {\n      position: absolute; //使得图片的位置齐平\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      object-fit: cover; //防止图片被压缩\n    }\n  }\n\n  .desc {\n    margin: 10px 0 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: ${(props) => props.verifyColor}; //动态的引入message的text_color\n    //结合index的动态引入verifyColor ={itemDate?.verify_info?.text_color || \"#39576a\"}\n  }\n  .name {\n    font-size: 16px;\n    font-weight: 700;\n\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n\n  .price {\n    margin: 8px 0;\n  }\n\n  .bottom {\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    font-weight: 600;\n    color: ${(props) => props.theme.text.primaryColor};\n\n    .count {\n      margin: 0 2px 0 4px;\n    }\n\n    .name {\n      font-size: 16px;\n      font-weight: 700;\n\n      overflow: hidden;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n    }\n\n    .price {\n      margin: 8px 0;\n    }\n\n    .bottom {\n      display: flex;\n      align-items: center;\n      font-size: 10px;\n      font-weight: 600;\n      color: ${(props) => props.theme.text.primaryColor};\n\n      .count {\n        margin: 0 2px 0 4px;\n      }\n\n      .MuiRating-decimal {\n        margin-right: -2px;\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const IndicatorWrapper = styled.div`\n  overflow: hidden;\n\n  .i-content {\n    position: relative;\n    display: flex;\n    transition: transform 200ms ease;\n\n    > * {\n      flex-shrink: 0;\n    }\n  }\n`;\n","import PropTypes from 'prop-types'\nimport React, { memo, useEffect,useRef } from 'react'\nimport { IndicatorWrapper } from './style'\n\nconst Indicator = memo((props) => {\n  const {selectIndex = 0 } = props\n  const contentRef = useRef()\n\n  useEffect(()=>{\n    //先获取对应的item \n    const selectItemEl = contentRef.current.children[selectIndex]\n    const itemLeft = selectItemEl.offsetLeft \n    const itemWidth = selectItemEl.clientWidth\n    //2.content宽度\n    const contentWidth = contentRef.current.clientWidth \n    const contentScroll = contentRef.current.scrollWidth\n   \n    let distance = itemLeft + itemWidth * 0.5 - contentWidth * 0.5\n    if(distance < 0) distance = 0\n    const totalDistance = contentScroll - contentWidth\n    if(distance > totalDistance) distance = totalDistance\n\n    contentRef.current.style.transform = `translate(${-distance}px)`\n\n  },[selectIndex])\n\n\n\n  return (\n    <IndicatorWrapper>\n      <div className='i-content' ref = {contentRef}>\n        {\n          props.children\n        }\n      </div>\n\n    </IndicatorWrapper>\n  )\n})\n\nIndicator.propTypes = {\n  selectIndex:PropTypes.number\n}\n\nexport default Indicator","import PropTypes from 'prop-types'\nimport React, { memo, useRef ,useState} from 'react'\nimport { ItemWrapper } from './style'\nimport Rating from '@mui/material/Rating';\nimport { Carousel } from 'antd';\nimport IconArrowLeft from '@/assets/img/svg/icon_arrow_left';\nimport IconArrowRight from '@/assets/img/svg/icon_arrow_right';\nimport Indicator from '@/base-ui/indicator';\nimport classNames from 'classnames';\n\nconst RoomItem = memo((props) => {\n  //把Item设置为动态的数值。如果不传数据则设置一个默认值为25%\n  const {itemData,itemWidth = \"25%\" } = props\n  const [selectIndex,setSelectIndex] = useState(0)\n  const sliderRef = useRef()\n\n  function controlClickHandle(isRight = true ){\n    //1. 上一个面板下一个面板 绑定在这个组件上则调用next（）/prev（）\n    isRight ? sliderRef.current.next() : sliderRef.current.prev()\n\n    let newIndex = isRight ? selectIndex + 1 : selectIndex - 1\n    const length = itemData.picture_urls.length\n    if (newIndex < 0) newIndex = length -1\n    if(newIndex > length - 1 ) newIndex = 0\n    setSelectIndex(newIndex)\n\n  }\n  const pictureElement = (\n    <div className='cover'> \n    <img src={itemData.picture_url} alt='' />  \n    </div>\n  )\n  const sliderElement = (\n    <div className='slider'>\n    <div className='control'>\n      <div className='btn left' onClick = {e => controlClickHandle(false)}>\n        <IconArrowLeft width = '25' height ='25'/>\n      </div>\n      <div className='btn right' onClick = {e => controlClickHandle(true)}>\n        <IconArrowRight width = '25' height = '25'/>\n      </div>\n    </div>\n    <div className='indicator'>\n      <Indicator selectIndex = {selectIndex}>\n        {\n         itemData.picture_urls?.map((item,index)=>{\n            return(\n              <div className='item' key={item}>\n                <span className={classNames(\"dot\",{active: selectIndex === index })} ></span>\n              </div>\n            )\n         })\n        }\n      </Indicator>\n    </div>\n    <Carousel dots = {false} ref ={sliderRef}>\n      {\n        itemData?.picture_urls?.map(item =>{\n          return(\n            <div className='cover' key={item}> \n              <img src={item} alt=''/>\n            </div>\n          )\n        })\n      }\n    </Carousel>\n  </div>\n  )\n\n  return (\n    <ItemWrapper verifyColor ={itemData?.verify_info?.text_color || \"#39576a\"}\n    itemWidth = {itemWidth}\n    >\n      {/* 动态传入数据设置itemWidth，需要进入section-rooms 搭配设置 */}\n\n      <div className='inner'>\n       {!itemData.picture_urls ? pictureElement : sliderElement}\n        <div className='desc'>\n          {itemData.verify_info.messages.join('.')}\n          {/* 展示数组，并且用 - 拼接样式 */}\n        </div>\n            <div className='name'>{itemData.name}</div>\n            <div className='price'>¥{itemData.price}/晚</div>\n        <div className='bottom'>\n          \n        {/* 1.如果是0 则显示0.用？？ 来表示/ 2. 当值为undefined的时候 用 ｜｜ 设置  */}\n        {/* Rating 是采用的material design集成设置的样式/也可以用ant design 集成*/}\n            <Rating name=\"read-only\" defaultValue={itemData.star_rating ?? 5} precision={0.5} readOnly\n               sx={{fontSize:\"8px\",color:\"#00848A\" ,marginRight: \"-1px\"}} />\n               <span className='count'>\n                {itemData.reviews_count}\n               </span>\n               {\n                itemData.bottom_info && <span className='extra'>-{itemData.bottom_info?.content}</span>             \n               }\n        </div> \n    </div>\n    </ItemWrapper>\n  )\n})\n\nRoomItem.propTypes = {\n  itemDate:PropTypes.object\n}\n\nexport default RoomItem","import TNRequest from \"..\";\n\nexport function getEntireRoomList(offset = 0, size = 20) {\n  return TNRequest.get({\n    url: \"entire/list\",\n    params: {\n      offset,\n      size,\n    },\n  });\n}\n","import { getEntireRoomList } from \"@/services/modules/entire\";\nimport * as actionTypes from \"./constants\";\n\nexport const changeCurrentPageAction = (currentPage) => ({\n  type: actionTypes.CHANGE_CURRENT_PAGE,\n  currentPage,\n});\n\nexport const changeRoomListAction = (roomList) => ({\n  type: actionTypes.CHANGE_ROOM_LIST,\n  roomList,\n});\n\nexport const changeTotalCountAction = (totalCount) => ({\n  type: actionTypes.CHANGE_TOTAL_COUNT,\n  totalCount,\n});\n\nexport const ChangeIsLoadingAction = (isLoading) => ({\n  type: actionTypes.CHANGE_IS_LOADING,\n  isLoading,\n});\n\n//发送网络请求\nexport const fetchRoomListAction = (page = 0) => {\n  return async (dispatch, getState) => {\n    //重新更新current页面的数据\n    dispatch(changeCurrentPageAction(page));\n\n    //1.根据页码获取最新数据\n    dispatch(ChangeIsLoadingAction(true));\n    const res = await getEntireRoomList(page * 20);\n    dispatch(ChangeIsLoadingAction(false));\n\n    //2. 获取到最新的数据，保存到redux的store中\n    const roomList = res.list;\n    const totalCount = res.totalCount;\n\n    dispatch(changeRoomListAction(roomList));\n    dispatch(changeTotalCountAction(totalCount));\n  };\n};\n","import styled from \"styled-components\";\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 48px;\n  padding-left: 16px;\n  border-bottom: 1px solid #f2f2f2;\n  background-color: #fff;\n  .filter {\n    display: flex;\n\n    .item {\n      margin: 0 4px 0 8px;\n      padding: 6px 12px;\n      border: 1px solid #dce0dc;\n      border-radius: 4px;\n      color: #484848;\n      cursor: pointer;\n\n      &.active {\n        background: #008489;\n        border: 1px solid #008489;\n        color: #ffffff;\n      }\n    }\n  }\n`;\n","import React, { memo } from 'react'\nimport { useState } from 'react'\nimport { FilterWrapper } from './style'\nimport filterData from '@/assets/data/filter_data.json'\nimport classNames from 'classnames'\n\nconst EntireFilter = memo(() => {\n    const [selectItems,setSelectItems] = useState ([])\n\n    function itemClickHandle( item ){\n      const newItems = [...selectItems]\n      if(newItems.includes(item)){\n        const itemIndex = newItems.findIndex(filterItem => filterItem === item)\n        newItems.splice(itemIndex,1)\n      }else{\n        newItems.push(item)\n      }\n      setSelectItems(newItems)\n    }\n \n  return (\n    <FilterWrapper>\n     <div className='filter'> \n     {\n        filterData.map((item,index)=>{\n          return(\n            <div className={classNames(\"item\",{active: selectItems.includes(item)})}\n          key={item} \n          onClick = { e => {itemClickHandle(item)}} > {item} \n          </div>\n          )\n        })\n      }\n     </div>\n    </FilterWrapper>\n  )\n})\n\nexport default EntireFilter","import styled from \"styled-components\";\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  .info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .MuiPaginationItem-page.Mui-selected {\n      background-color: #222;\n      color: #fff;\n    }\n    .MuiPaginationItem-page {\n      margin: 0 10px;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  .desc {\n    margin-top: 15px;\n  }\n`;\n","import React, { memo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { PaginationWrapper } from './style'\nimport { Pagination } from '@mui/material'\nimport { changeCurrentPageAction, fetchRoomListAction } from '@/store/modules/entire/createActions'\n\nconst EntirePagination = memo(() => {\n  const {totalCount,currentPage,roomList} = useSelector((state)=>({\n    totalCount: state.entire.totalCount,\n    currentPage: state.entire.currentPage,\n    roomList:state.entire.roomList\n  }),shallowEqual)\n  const startCount = currentPage * 20 + 1\n  const endCount = (currentPage +1) * 20\n  const pageCount = Math.ceil(totalCount/20)\n\n  const dispatch = useDispatch()\n  function pageChangeHandle(event,pageCount){\n    //更新最新的页码\n    // dispatch(changeCurrentPageAction(pageCount -1 ))\n    dispatch(fetchRoomListAction(pageCount -1 ))\n  }\n\n  return (\n    <PaginationWrapper>\n      {\n        !!roomList.length && (\n          <div className='info'>\n        <Pagination count ={pageCount} onChange ={pageChangeHandle}/>\n        <div className='desc'>\n          第{startCount} - {endCount}房源，总共{totalCount}多条数据\n        </div>\n      </div>\n      \n        )\n      }\n    </PaginationWrapper>\n  )\n})\n\nexport default EntirePagination","import styled from \"styled-components\";\n\nexport const RoomsWrapper = styled.div`\n  padding: 30px 20px;\n  position: relative;\n  .title {\n    font-size: 22px;\n    font-weight: 700;\n    color: #222;\n    margin: 0 0 10px 10px;\n  }\n  .list {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  > .cover {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background-color: rgba(255, 255, 255, 0.8);\n  }\n`;\n","\nimport React, { memo, useEffect } from 'react'\nimport { shallowEqual, useSelector } from 'react-redux'\nimport { RoomsWrapper } from './style'\nimport RoomItem from '@/components/room-item'\n\n\nconst EntireRooms = memo(() => {\n  const { roomList,totalCount,isLoading } = useSelector((state)=>({\n    roomList:state.entire.roomList,\n    totalCount:state.entire.totalCount,\n    isLoading:state.entire.isLoading\n  }),shallowEqual)\n\n  return (\n    <RoomsWrapper>\n      <h2 className='title'>{totalCount}多处住所</h2>\n      <div className='list'>\n\n      {  \n        roomList.map(item =>{\n          return (\n           <RoomItem itemData = {item} itemWidth = \"20%\" key ={item._id}></RoomItem>\n          )\n        })\n      }\n      </div>\n      {\n        isLoading && <div className='cover'></div>\n      }\n    </RoomsWrapper>\n  )\n}) \n\nexport default EntireRooms","import styled from \"styled-components\";\n\nexport const EntireWrapper = styled.div``;\n","import { fetchRoomListAction } from '@/store/modules/entire/createActions'\nimport PropTypes from 'prop-types'\nimport React, { memo, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport EntireFilter from './c-cpns/entire-filter'\nimport EntirePagination from './c-cpns/entire-pagination'\nimport EntireRooms from './c-cpns/entire-rooms'\nimport { EntireWrapper } from './style'\n\nconst Entire = memo((props) => {\n  const dispatch =useDispatch()\n  useEffect(()=>{\n    dispatch(fetchRoomListAction())\n  },[dispatch])//发送网络请求并且获取到数据\n\n  return (\n   <EntireWrapper>\n    <EntireFilter/>\n    <EntireRooms/>\n    <EntirePagination/>\n   </EntireWrapper>\n  )\n})\n\nEntire.propTypes = {}\n\nexport default Entire\n"],"names":["IconArrowLeft","memo","props","width","height","viewBox","role","focusable","style","styleStrToObj","d","fillRule","IconArrowRight","ItemWrapper","styled","itemWidth","verifyColor","theme","text","primaryColor","IndicatorWrapper","selectIndex","contentRef","useRef","useEffect","selectItemEl","current","children","itemLeft","offsetLeft","clientWidth","contentWidth","distance","totalDistance","scrollWidth","transform","className","ref","RoomItem","itemData","useState","setSelectIndex","sliderRef","controlClickHandle","isRight","next","prev","newIndex","length","picture_urls","pictureElement","src","picture_url","alt","sliderElement","onClick","e","map","item","index","classNames","active","dots","verify_info","text_color","messages","join","name","price","Rating","defaultValue","star_rating","precision","readOnly","sx","fontSize","color","marginRight","reviews_count","bottom_info","content","getEntireRoomList","offset","size","TNRequest","url","params","changeCurrentPageAction","currentPage","type","actionTypes","changeRoomListAction","roomList","changeTotalCountAction","totalCount","ChangeIsLoadingAction","isLoading","fetchRoomListAction","page","dispatch","getState","res","list","FilterWrapper","selectItems","setSelectItems","filterData","includes","newItems","itemIndex","findIndex","filterItem","splice","push","itemClickHandle","PaginationWrapper","useSelector","state","entire","shallowEqual","startCount","endCount","pageCount","Math","ceil","useDispatch","Pagination","count","onChange","event","RoomsWrapper","_id","EntireWrapper"],"sourceRoot":""}